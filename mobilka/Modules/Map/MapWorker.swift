//
//  MapWorker.swift
//  mobilka
//
//  Created by Андрей Лихачев on 03.12.2019.
//  Copyright (c) 2019 Андрей Лихачев. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class MapWorker
{
    func getMapData(coordinates: Map.Coordinates, onSuccess:(([Map.Models.City]) -> Void)?){
    let url = URL(string: "http://api.openweathermap.org/data/2.5/box/city?APPID=d98215458e56ea571d25d5ec7a88bc05&bbox=\(coordinates.bottomleft.longitude),\(coordinates.bottomleft.latitude),\(coordinates.topright.longitude),\(coordinates.topright.latitude),10&units=metric&lang=ru")
        
        var cities:[Map.Models.City] = []
           URLSession.shared.dataTask(with: url!, completionHandler: {(data, response, error) in
               guard let data = data, error == nil else {print(error!); return}
               do
               {
                   let new_cities = try JSONSerialization.jsonObject(with: data, options: .allowFragments) as? NSDictionary
                   if let list = new_cities?["list"] as? [[String:Any]]{
                       for city in list{
                           let id = city["id"] as!Int
                           let name = city["name"] as! String
                           let coord = city["coord"] as! [String:Any]
                           let lat = coord["Lat"] as! Double
                           let lon = coord["Lon"] as! Double
                           let main = city["main"] as! [String:Any]
                           let temp = main["temp"] as! Double
                           let weather = city["weather"] as! [[String:Any]]
                           let icon = weather[0]["icon"] as! String
                           let dt = city["dt"] as! Int
                           
                        let new_city = Map.Models.City(id: id, name: name, lat: lat, lon: lon, temp: temp, icon: icon, dt: dt)
                        
                        cities.append(new_city)
                       }
                    onSuccess?(cities)
                   }
               }catch{
                   print(error.localizedDescription)
               }
           }).resume()
    }
}
