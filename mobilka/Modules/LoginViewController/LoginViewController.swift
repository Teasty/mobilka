//
//  LoginViewController.swift
//  mobilka
//
//  Created by Андрей Лихачев on 10/10/2019.
//  Copyright (c) 2019 Андрей Лихачев. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginDisplayLogic: class
{
    func displaySomething(viewModel: Login.userInfo.ViewModel)
    func disableFields()
    func enableFields()
    func showNetworkError()
    func showValidateionError()
    func stopEditing()
    func clearMessage()
    func login()
}

class LoginViewController: UIViewController
{
    
  var interactor: LoginBusinessLogic?
  var router: (NSObjectProtocol & LoginRoutingLogic & LoginDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = LoginInteractor()
    let presenter = LoginPresenter()
    let router = LoginRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
  }
    
    override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {
        stopEditing()
    }
  
  // MARK: Do something
  
    @IBOutlet weak var emailTextField: UITextField!
    @IBOutlet weak var passwordTextField: UITextField!
    @IBOutlet weak var singInButton: UIButton!
    @IBOutlet weak var alertLabel: UILabel!
    
    
    @IBAction func singInButtonTapped(_ sender: Any) {
        
        let request = Login.userInfo.Request(email: emailTextField.text!, password: passwordTextField.text!)
        interactor?.singInButtonTapped(request: request)
    }
    
    
    
    
}

extension LoginViewController: LoginDisplayLogic {
    func login() {
        disableFields()
        
        DispatchQueue.main.asyncAfter(deadline: .now() + 1.0){
            let mainStoryBoard = UIStoryboard(name: "Main", bundle: nil)
            let redViewController = mainStoryBoard.instantiateViewController(withIdentifier: "GitNavigation") as! UINavigationController
            let appDelegate = UIApplication.shared.delegate as! AppDelegate
            appDelegate.window?.rootViewController = redViewController
        }
    }
    
    func clearMessage() {
        alertLabel.text = ""
    }
    
    func stopEditing() {
            self.view.endEditing(true)
    }
    
    
    func displaySomething(viewModel: Login.userInfo.ViewModel) {
        
    }
    
    func disableFields() {
        emailTextField.isEnabled = false
        passwordTextField.isEnabled = false
        singInButton.isEnabled = false
        
        print("Fields are disabled")
    }
    
    func enableFields() {
        emailTextField.isEnabled = true
        passwordTextField.isEnabled = true
        singInButton.isEnabled = true
        
        print("Fields are enabled")
    }
    
    func showNetworkError() {
        alertLabel.text = "There is a connection problem."
    }
    
    func showValidateionError() {
        alertLabel.text = "Email or password are incorrect."
    }
    
    
}
