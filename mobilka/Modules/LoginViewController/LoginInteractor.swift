//
//  LoginInteractor.swift
//  mobilka
//
//  Created by Андрей Лихачев on 10/10/2019.
//  Copyright (c) 2019 Андрей Лихачев. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginBusinessLogic
{
    func greeting()
    func singInButtonTapped(request: Login.userInfo.Request)
    
}

protocol LoginDataStore
{
  //var name: String { get set }
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore
{
    func singInButtonTapped(request: Login.userInfo.Request) {
        presenter?.disableFields()
        presenter?.clearMessage()
        
        worker = LoginWorker()
        worker?.validate(request: request, onSuccess: {
            self.worker?.singIn(request: request, onSuccess: {
                print("Signed in")
                self.presenter?.enableFields()
            }, onFail: {
                print("Denied")
                self.presenter?.showValidateionError()
                self.presenter?.enableFields()
            })
        }, onFail: {
            self.presenter?.showValidateionError()
            self.presenter?.enableFields()
        })
        
    }
    
    
    
    
  var presenter: LoginPresentationLogic?
  var worker: LoginWorker?
  //var name: String = ""
  
  // MARK: Do something
  
  func greeting()
  {
    print("Hello Iteractor!")
    worker = LoginWorker()
    worker?.greeting()
  }
}
